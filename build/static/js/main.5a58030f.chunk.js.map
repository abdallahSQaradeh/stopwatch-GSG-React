{"version":3,"sources":["components/buttonTab/buttonTab.component.jsx","components/header/header.component.jsx","components/stopwatch/stopwatch-content/stopwatch-content.component.jsx","components/stopwatch/stopwatch-footer/stopwatch-footer.component.jsx","components/stopwatch/stopwatch.component.jsx","components/container/container.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["buttonTab","props","className","active","name","icon_name","header","stopwatch_content","minutes","seconds","milliseconds","stopwatch_footer","onClick","start","reset_flag","reset","Stopwatch","s_current_timer","interval","last_update","s_seconds","s_milSeconds","s_minutes","state","startTimeHandler","e","setState","target","textContent","toLowerCase","s_interval","s_last_update","Date","getTime","setInterval","update","stopTimer","s_now","s_dt","s_time","pad","getSeconds","parseInt","getMilliseconds","getMinutes","n","console","log","substring","resetTimer","clearInterval","render","Component","container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a58030f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./buttonTab.style.scss\"\r\nconst buttonTab = (props)=>\r\n{\r\n    return(<div className={`button-tab ${props.active?\"active\":''} `}>\r\n        \r\n    <ion-icon name={props.icon_name}></ion-icon>\r\n    <span> {props.name}</span>\r\n\r\n</div>)\r\n}\r\nexport default buttonTab;","import React from 'react'\r\nimport ButtonTab from \"../buttonTab/buttonTab.component\"\r\nimport \"./header.style.scss\"\r\nconst header= (props)=>\r\n{\r\n    return (<div className=\"header\">\r\n        <ButtonTab name=\"timer\" icon_name=\"hourglass-outline\"/>\r\n        <ButtonTab name=\"stopwatch\" icon_name=\"stopwatch-outline\" active />\r\n    </div>);\r\n}\r\nexport default header;","import React from 'react'\r\nimport \"./stopwatch-content.style.scss\"\r\nconst stopwatch_content= (props)=>\r\n{\r\n    return(\r\n            <div className=\"s-body\">\r\n                <span className=\"s-minutes\">{props.minutes>0? props.minutes:''}</span><sub className=\"s-m\">{props.minutes>0? 'm':''}</sub>\r\n                <span className=\"s-seconds\">{props.seconds}</span><sub>S</sub>\r\n    <span className=\"s-m-seconds\">{props.milliseconds}</span>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default stopwatch_content;","import React from 'react'\r\nimport \"./stopwatch-footer.style.scss\"\r\n\r\nconst stopwatch_footer = (props)=>\r\n{\r\n\r\n    return (\r\n        <div className=\"s-footer\">\r\n        <div className=\"s-controls\">\r\n          <div className=\"s-start\" onClick={props.start} >{`${props.reset_flag?'Start':'stop' }`}</div>\r\n          <div className=\"s-reset\" onClick={props.reset}>Reset</div>\r\n        </div>\r\n        <div className=\"resize\"><ion-icon name=\"expand-outline\"></ion-icon></div>\r\n      </div>\r\n    )\r\n}\r\nexport default stopwatch_footer;","import React ,{Component}from 'react'\r\nimport \"./stopwatch.style.scss\"\r\nimport StopWatchContent from \"./stopwatch-content/stopwatch-content.component\"\r\nimport StopWatchFooter from \"./stopwatch-footer/stopwatch-footer.component\"\r\nclass Stopwatch extends Component{\r\n   \r\n        s_current_timer=0;\r\n        interval=0;\r\n        last_update=0;\r\n        start=0;\r\n        s_seconds=0;\r\n         s_milSeconds = 0;\r\n         s_minutes=null;\r\n\r\n    \r\nstate={\r\n    minutes:0,\r\n    seconds:0,\r\n    milliseconds:0,\r\n    reset:true\r\n}\r\n    startTimeHandler=(e)=>\r\n    {\r\n       \r\n        this.setState({reset:false})\r\n        if(e.target.textContent.toLowerCase()==='start')\r\n        {\r\n            e.target.textContent='stop'\r\n            if(!this.s_interval)\r\n            {\r\n                this.s_last_update = new Date().getTime();\r\n                this.s_interval = setInterval(this.update,1)\r\n            }\r\n        }\r\n            else if(e.target.textContent.toLowerCase()===\"stop\")\r\n        {\r\n            e.target.textContent='start'\r\n            this.stopTimer();\r\n \r\n        }\r\n        \r\n            \r\n    }\r\n   update=()=>{\r\n \r\n        let s_now =new Date().getTime(),\r\n        s_dt = s_now - this.s_last_update;\r\n        this.s_current_timer+=s_dt;\r\n        let s_time = new Date(this.s_current_timer);\r\n        this.setState(({seconds})=>({seconds:this.pad(s_time.getSeconds())}))\r\n        this.setState(({milliseconds})=>({milliseconds:this.pad( parseInt( s_time.getMilliseconds()/10))}))\r\n        \r\n        this.s_last_update = s_now;\r\n        if(s_time.getMinutes()!=0)\r\n        {\r\n             \r\n            this.setState({minutes:this.pad(s_time.getMinutes())});\r\n        }\r\n    \r\n    }\r\n     pad=(n)=>{\r\n         console.log(n)\r\n        return (\"\" + n).substring(-2)\r\n    }\r\n    resetTimer=()=>\r\n    {\r\n        this.stopTimer();\r\n        clearInterval(this.interval);\r\n        this.s_interval=0;\r\n        this.s_current_timer=0;\r\n        this.setState({seconds:0,milliseconds:0,minutes:0,reset:true})\r\n    \r\n    }\r\n    stopTimer=()=>{\r\n\r\n        clearInterval(this.s_interval);\r\n        this.s_interval  =0;\r\n    }\r\n    render=()=>\r\n    {\r\n\r\n        return(\r\n        <div className=\"stop-watch\">\r\n            <StopWatchContent minutes={this.state.minutes} seconds={this.state.seconds} milliseconds={this.state.milliseconds}/>\r\n            <StopWatchFooter start={this.startTimeHandler} reset={this.resetTimer} reset_flag={this.state.reset} />\r\n       \r\n      </div>\r\n     )\r\n    }\r\n}\r\nexport default Stopwatch;","import React from 'react'\r\nimport \"./container.style.scss\"\r\nimport Header from \"../header/header.component\"\r\nimport Stopwatch from \"../stopwatch/stopwatch.component\"\r\nconst container = (props)=>\r\n{\r\n\r\n    return <div className=\"container\">\r\n            <Header/>\r\n            <Stopwatch />\r\n    </div>\r\n}\r\nexport default container;","\r\nimport './App.scss';\r\nimport Container from \"./components/container/container.component\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Container/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}